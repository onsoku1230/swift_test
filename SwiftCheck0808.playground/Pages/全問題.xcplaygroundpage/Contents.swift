//: Playground - noun: a place where people can play
import UIKit


/*:
 ##### 問題1：強制アンラップがなぜ危険なのか説明しなさい
 ---
 */
// もしその要素がnilになっていた場合、そこに強制アンラップでアクセスするとアプリが落ちてしまう
/*:
 ##### 問題2：下記の変数にnilが代入されていた場合、??を使用して任意の文字列を変数に代入して、print()で表示させなさい
 ---
 */
var text: String?
print(text ?? "hoge")

/*:
 ##### 問題3：以下の処理が実行できるように修正しなさい
 ---
 */
let isShow: Bool? = true
if let hoge = isShow {
    print("問題1: 正解!!")
}


//: ---
//: クラス　Human
//: ---
class Human {
    var name: String?
    var age: Int?
}

/*:
 ##### 問題4：上記 Human クラスのオブジェクトを生成し、メンバーに値を入れなさい
 ---
 */


/*:
 ##### 問題5：問題4で生成した Human クラスのオブジェクトを引数として受け取る関数を作成しなさい。
            作成した関数に問題4のオブジェクトを渡し、受け取った引数の Humanクラスのメンバーをprint()で表示させなさい
            その際、warningがでないように guard let を使用して回避しなさい
 ---
 */


/*:
 ##### 問題6：下記をエラーにならないように修正しなさい
 ---
 */
let obj = Human()
obj.age = 20
var number = obj.age + 5


/*:
 ##### 問題7：下記 Flagクラス内にメンバーの値を設定する関数を定義しなさい。Flagクラスのオブジェクトを生成し、定義した関数を使用して値を設定しなさい。
 ---
 */
class Flag {
    var color: UIColor?
    var text: String?
}

/*:
 ##### 問題8：問題7で生成したオブジェクトのメンバーtextをprint()で表示しなさい。warningなどが出ないようにif letを使用して回避しなさい。
 ---
 */


/*:
 ##### 問題9：以下のメンバーを持つ構造体を定義し、オブジェクトとして任意の値を設定し生成しなさい。
 * drink : String?
 * main_dish : String?
 ---
 */


/*:
 ##### 問題10：問題9で生成したオブジェクトのメンバーをprint()で表示しなさい
 ---
 */


/*:
 ##### 問題11：構造体とクラスの違いを説明しなさい
 ---
 */


/*:
 ##### 問題12：任意のクラスを定義し、インスタンスメソッドをクラス内に定義しなさい
 ---
 */


/*:
 ##### 問題13：任意のクラスを定義し、クラスメソッドをクラス内に定義しなさい
 ---
 */


/*:
 ##### 問題14：任意のクラスを定義し、staticメソッドをクラス内に定義しなさい
 ---
 */


/*:
 ##### 問題15：クラス内に定義したstaticメソッドとクラスメソッドの違い説明しなさい
 ---
 */


/*:
 ##### 問題16：下記の関数をオーバーロードした関数を定義しなさい。値や内部処理などは任意とする
 ---
 */
func display(text: String) {
    print(text)
}


/*:
 ##### 問題17：下記の関数にデフォルト引数を定義しなさい
 ---
 */
func hogehoge(text: String) {
    print(text)
}


/*:
 ##### 問題18：下記の関数にデフォルト引数を定義しなさい
 ---
 */
func hogehoge(hasText: Bool) -> Bool {
    return hasText
}

/*:
 ##### 問題19：Int型のenumを定義しなさい
 ---
 */


/*:
 ##### 問題20：String型のenumを定義しなさい
 ---
 */


/*:
 ##### 問題21：問題19で定義したenumに、caseごとに文字列を返すメソッドを定義しなさい。任意のcaseでメソッドを呼び出してprint()で表示しなさい
 ---
 */
